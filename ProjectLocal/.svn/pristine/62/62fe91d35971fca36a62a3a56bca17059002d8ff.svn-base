//mdm

package matchState.entities;

import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;

import gui.MyPanel;

public class Ball implements Runnable{
	
	private BufferedImage image;
	private CoOrdinates position;
	private Player lastPlayer;
	private int xSpeed;
	private int ySpeed;
	private int resultSpeed;
	private int dx, dy;
	private boolean isMoving;
	
	//For singleton
	static Ball ball = new Ball();
	
	private Ball(){
		this.isMoving = true;
		//this.xSpeed = dx/wait;
		//this.ySpeed = dy/wait;
		this.dx = 2;
		this.dy = 2;
		this.position = new CoOrdinates(110, 110);
		/*try {
			this.image = ImageIO.read(new File("Resources/ball.png"));
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}*/
		
		
	}
	
	@Override
	public void run() {
		// TODO Auto-generated method stub
		while(isMoving)
		{
			try
			{
				Thread.sleep(50);//(int)resultspeed +150);			
			}
			catch (InterruptedException e)
			{
				e.printStackTrace();
			}
			//Have to calculate new position
			int oldx = (int) this.position.x;
			int oldy = (int) this.position.y;
			int newx = oldx + dx;
			
			//Radius assumed to be 30
			if(newx + 30 > MyPanel.WIDTH || newx<0)
				dx = -dx;
			int newy = oldy + dy ;
			if(newy + 30 > MyPanel.HEIGHT || newy<0)
				dy = -dy;
			//ball.setFrame(position.x,position.y , size, size); 
			this.position.setX(newx);
			this.position.setX(newx);
			
			//System.out.println(position.x + " " + position.y);
			//MyPanel.repaint();
		}

	}
	public void draw(Graphics2D g2d , BufferedImage img , MyPanel panel)
	{
		g2d.drawImage(img,(int)position.x - 10,(int)position.y - 20 , panel);
		
	}
	
	public static Ball getInstance(){
		return ball;
	}
	
	public void setCoOrdinates(double x, double y){
		this.position.x = x;
		this.position.y = y;
	}

}
